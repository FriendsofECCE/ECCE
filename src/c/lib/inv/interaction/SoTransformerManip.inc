/*
 *
 *  Copyright (C) 2000 Silicon Graphics, Inc.  All Rights Reserved. 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  Further, this software is distributed without any warranty that it is
 *  free of the rightful claim of any third person regarding infringement
 *  or the like.  Any license provided herein, whether implied or
 *  otherwise, applies only to this software file.  Patent licenses, if
 *  any, provided herein do not apply to combinations of this program with
 *  other software, or any other product whatsoever.
 * 
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
 *  Mountain View, CA  94043, or:
 * 
 *  http://www.sgi.com 
 * 
 *  For further information regarding this notice, see: 
 * 
 *  http://oss.sgi.com/projects/GenInfo/NoticeExplan/
 *
 */

/*
 * Copyright (C) 1994   Silicon Graphics, Inc.
 *
 _______________________________________________________________________
 ______________  S I L I C O N   G R A P H I C S   I N C .  ____________
 |
 |
 |   Classes:
 |	SoTransformerManip
 |
 |   Author(s): Paul Isaacs
 |
 ______________  S I L I C O N   G R A P H I C S   I N C .  ____________
 _______________________________________________________________________
 */


#include <stdio.h>
#include "inv/SbLinear.H"
#include "inv/SoDB.H"

#include "inv/draggers/SoTransformerDragger.H"
#include "inv/manips/SoTransformerManip.H"
#include "inv/nodes/SoSurroundScale.H"

SO_NODE_SOURCE(SoTransformerManip);

////////////////////////////////////////////////////////////////////////
//
// Description:
//    Constructor
//
SoTransformerManip::SoTransformerManip()
//
////////////////////////////////////////////////////////////////////////
{
    SO_NODE_CONSTRUCTOR(SoTransformerManip);
    isBuiltIn = TRUE;

    SoTransformerDragger *d = new SoTransformerDragger;
    setDragger(d);
    SoSurroundScale *ss = (SoSurroundScale *) d->getPart("surroundScale",TRUE);
    ss->numNodesUpToContainer = 4;
    ss->numNodesUpToReset = 3;
}

////////////////////////////////////////////////////////////////////////
//
// Description:
//    Destructor
//
SoTransformerManip::~SoTransformerManip()
//
////////////////////////////////////////////////////////////////////////
{
}

void 
SoTransformerManip::unsquishKnobs()
{
    if ( !getDragger() )
	return;
    if ( getDragger()->isOfType( SoTransformerDragger::getClassTypeId() ) )
        ((SoTransformerDragger *)getDragger())->unsquishKnobs();
}

// Controls whether or not locate highlighting is used.
SbBool 
SoTransformerManip::isLocateHighlighting()
{
    if ( !getDragger() )
	return FALSE;
    if ( getDragger()->isOfType( SoTransformerDragger::getClassTypeId() ) )
        return ((SoTransformerDragger *)getDragger())->isLocateHighlighting();
    else
	return FALSE;
}

void 
SoTransformerManip::setLocateHighlighting( SbBool onOff )
{
    if ( !getDragger() )
	return;
    if ( getDragger()->isOfType( SoTransformerDragger::getClassTypeId() ) )
        ((SoTransformerDragger *)getDragger())->setLocateHighlighting( onOff );
}

